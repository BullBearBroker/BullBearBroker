version: "3.9"

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-bullbear}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-bullbear}
      POSTGRES_DB: ${POSTGRES_DB:-bullbear}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-bullbear}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg2://bullbear:bullbear@db:5432/bullbear}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      BULLBEAR_DEFAULT_USER: ${BULLBEAR_DEFAULT_USER:-test@bullbear.ai}
      BULLBEAR_DEFAULT_PASSWORD: ${BULLBEAR_DEFAULT_PASSWORD:-Test1234!}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: npm run dev -- --hostname 0.0.0.0 --port 3000
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      NEXT_PUBLIC_API_BASE_URL: ${NEXT_PUBLIC_API_BASE_URL:-http://backend:8000}
    depends_on:
      backend:
        condition: service_started

volumes:
  postgres_data:
